App Analytics

total number of users

```
search
  users = count[given: [#user]]

bind @view
  [#value | value: users]
```

average messages per conversations

```
search
  threads = [#thread messages]
  messages-per-thread = count[given: messages] / count[given: threads]

bind @view
  [#value | value: messages-per-thread]
```

conversations per hour (bar chart)

```
search
  threads = [#thread time: [hour]]
  c = count[given: threads per: hour]

bind @view
  [#value | value: "{{hour}} -> {{c}}"]

bind @view
  [#bar-graph | bar: [label: hour, height: c, sort: hour]]
```

messages per second

```
search
  [#time timestamp]
  messages = [#message time > timestamp - 1000]
  message-count = count[given: messages]

bind @view
  [#value | value: message-count]
  [#history | values: [timestamp | value: message-count], history-size: 30]
```

```
search
  [#message-rate rate]
  rate > 300

commit @slack
  [#message from: "Eve" to: "Lori" message: "Message rate ({{rate}}) exceeded threshold. Consider provisioning another server."]
```





























To start, add a bunch of conversations and users

```
search
  r = range[from: 1 to: 100]
  hour = round[value: gaussian[seed: r, σ: 3, μ: 12]]
  hour' = if hour > 23 then 23
          else if hour < 0 then 0
          else hour

commit
  [#thread #test-data r time: [hour]]
  [#user #test-data r]
```

Add messages to threads

```
search
  threads = [#thread not(messages)]
  [#time timestamp]
  r = gaussian[seed: threads, σ: 1, μ: 6]
  i = range[from: 1, to: r]

commit
  threads.messages += [#message i]
```

Every second, add a random number of messages to a thread

```
search
  [#time time-string seconds timestamp frames]
  thread = [#thread r: 1]
  frames' = frames / 10
  r = gaussian[seed: timestamp, σ: 3, μ: frames' * frames']
  r' = if r < 0 then 0 else r
  i = range[from: 0, to: r']

commit
  thread.messages += [#message i: "{{timestamp}}:{{i}}" time: timestamp]
```

Every second, add a random number of users

```
search
  t = [#time seconds]
  min = 1
  max = 3
  r = random[seed: t.timestamp] * (max - min) + min
  i = range[from: 1 to: r]

commit
  [#user #test-data i: "{{t.timestamp}}:{{i}}"]
```
