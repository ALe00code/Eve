# Generic Mobile Application

Initialize some default values

```
commit
  [#app]
```

Set the app user

```
search
  app = [#app] 
  user = [#user name: "Corey Montella"]
  //user = [#user name: "Eric Hoffman"]
  
commit
  app.user := user
  app.page := [#about contact: user]
```

Set the threads


search
  app = [#app contact]
  threads = [#thread users: contact messages]
  not(threads = [#archived])

bind
  app.threads := threads


## Events

We have several types of events that the app responds to.

### Switch page

When the user clicks on a `#nav` button, set the app page to that button. We use this in subsequent blocks to fill the `#content` area of the app.

```
search @event @browser @session
  [#click element]
  element.tag = "nav"
  app = [#app user]

commit
  app.page := element
  app.contact := none
```

### Display contact

When the user clicks on a contact's name, their "About" page is displayed

```
search @event @browser @session
  [#click element: [#contact contact]]
  app = [#app]

commit
  app.contact := contact
  app.page := [#about contact]
```

### Display messages

```
search @event @browser @session
  [#click element: [#thread thread]]
  app = [#app]

commit
  app.page := [#thread thread]
```

### Send a message

```
search @event @browser @session
  [#keydown key: "enter" element: input]
  input = [#send-message thread value]
  [#app user]
  time = 1476821600000 + 1 

commit @browser
  input.value := ""
  thread.messages += [#message sender: user, time, text: value]

```

### Archive a thread

When the user archives a thread, the `#archive` tag is added to that thread, which then exludes it from display in the main thread list

```
search @event @browser @session
  [#click element: [#archive-button thread]]

commit @session
  thread += #archived
```

## Pages

### About Page

Displays information relating to a contact. This page is constructed in three parts. The first part displays phone and email for the contact:

```
search @browser @session
  content = [#content]
  [#app page: [#about contact]]

bind @browser @session
  content.children := [#div class: "about" children: 
    [#div class: "about-line", children:
      [#span class: "about-label", text: "Phone: "] 
      [#span text: contact.phone]]
    [#div class: "about-line", children:
      [#span class: "about-label", text: "E-mail: "] 
      [#span text: contact.email]]
    [#div #recent-contacts children:
      [#h3 text: "All Contacts ({{count[given: contact.contacts]}}):"] 
      [#img #contact contact: contact.contacts, class: "recent-avatar" src: contact.contacts.avatarURL]]]
```

If the user has threads

```
search @browser @session
  recent-div = [#recent-contacts]
  [#app page: [#about contact], user]
  threads = [#thread users: contact messages]
  recent = threads.users != contact

bind @browser @session
  recent-div.children := [#div children:  
    [#h3 text: "Recent Contacts ({{count[given: recent]}}):"]
    [#img class: "recent-avatar" src: recent.avatarURL]]
```

### Messages Page

```
search @browser @session
  content = [#content]
  app = [#app page: [#thread thread]]
  msgs = thread.messages
  name = if msgs.sender.name = app.user.name then "Me"
         else msgs.sender.name

bind @browser
  content.children := [#div children:
    [#div #convo class: "convo" children:
      [#div sort: msgs.time class: "msg" message: msgs children:
        [#img class: "msg-avatar" src: msgs.sender.avatarURL]
        [#div #contact contact: msgs.sender, class: "msg-name" text: name]
        [#div class: "msg-text" text: msgs.text]]]
    [#input #send-message thread class: "msg-input"]]
```

### Threads Page

```
search @browser @session
  content = [#content]
  app = [#app page: [#threads] threads]
  //not(threads = [#archived])
  //contacts = threads.users != app.user
  //message-count = count[given: threads.messages, per: threads.users]

bind @browser
  [#div text: "hello"]
```

  content.children := [#div threads class: "thread" children:
    [#div #thread thread: threads, class: "thread-box" children: 
      [#img class: "msg-avatar" src: contacts.avatarURL]
      [#div class: "msg-name" text: contacts.name]
      [#div text: "{{message-count}} messages"]]
    [#div #archive-button thread: threads, class: "archive" text: "üì•"]]

### Contacts Page

```
search @browser @session
  content = [#content]
  [#app user page: [#contacts]]

bind @browser @session
  content.children := [#div #contact contact: user.contacts, class: "contact" contact: user.contacts, children:
    [#img class: "contact-avatar" src: user.contacts.avatarURL]
    [#div class: "contact-name", text: user.contacts.name]
    [#div text: "Location: {{user.contacts.location}}"]
    [#div text: "Phone: {{user.contacts.phone}}"]
    [#div text: "E-mail: {{user.contacts.email}}"]]
```

### More Page

```
search @browser @session
  content = [#content]
  [#app page: [#more]]

bind @browser
  content.children := [#div text: "More"]
```

### Main App

```
search
  app = [#app user]
  [#time hours minutes ampm]
  // Pad single digit minutes with a leading 0 for display
  formatted-minutes = if minutes > 10 then minutes
                      else "0{{minutes}}"
  // The hours values are 0 - 11, but we want 1-12
  formatted-hours = if hours = 0 then "12"
                    else hours
  // Handle the case when the user has no threads
  threads = if app.threads then count[given: app.threads]
           else 0
  // If the user is looking at a contact, display that contact's avatar and info.
  // Otherwise, display the user's own avatar.
  current-contact = if app.contact then app.contact
                    else user

bind @browser
  [#link rel: "stylesheet" href: "/examples/css/crm.css"]
  [#div #container class: "container" children:
    [#div class: "banner"]
    [#div class: "bio-info" children: 
      [#div class: "avatar-container" children: 
        [#img class: "avatar", src: current-contact.avatarURL]]
      [#div class: "name2" text: "{{current-contact.name}}"]
      [#div class: "info" text: "{{current-contact.title}}"]
      [#div class: "info" text: "{{formatted-hours}}:{{formatted-minutes}}{{ampm}}, {{current-contact.location}}"]]
    [#div #content class: "content"]
    [#div class: "navigation" children:
      [#div #about #nav contact: user, class: "nav-button", children:
        [#div class: "icon" text: "üíÅ"]
        [#div class: "label" text: "ABOUT"]]
      [#div #threads #nav class: "nav-button middle", children:
        [#div class: "icon" children: [#div class: "bubble" text: threads]]
        [#div class: "label" text: "THREADS"]]
      [#div #contacts #nav class: "nav-button" children:
        [#div class: "icon" text: "üìá"]
        [#div class: "label" text: "CONTACTS"]]
      [#div #more #nav class: "nav-button" children:
        [#div class: "icon" text: "‚ãØ"]
        [#div class: "label" text: "MORE"]]]]
```

## Test Data

### users

```
commit
  [#user
   name: "Corey Montella"
   title: "Software Engineer"
   avatarURL: "https://avatars2.githubusercontent.com/u/10619266?v=3&s=466" 
   location: "San Francisco, CA"
   email: "corey@kodowa.com"
   phone: "555-555-5555"
   tags: [name: "VIP"][name: "Tech Contact"]]

  [#user
   name: "Chris Granger"
   title: "CEO"
   avatarURL: "https://avatars3.githubusercontent.com/u/70036?v=3&s=466" 
   location: "San Francisco, CA"
   email: "chris@kodowa.com"
   phone: "555-555-5556"]

  [#user
   name: "Josh Cole"
   title: "Software Engineer"
   avatarURL: "https://avatars2.githubusercontent.com/u/313870?v=3&s=466" 
   location: "San Francisco, CA"
   email: "josh@kodowa.com"
   phone: "555-555-5557"]

  [#user
   name: "Rob Attorri"
   title: "President"
   avatarURL: "https://avatars1.githubusercontent.com/u/1314445?v=3&s=466" 
   location: "San Francisco, CA"
   email: "rob@kodowa.com"
   phone: "555-555-5558"]

  [#user
   name: "Eric Hoffman"
   title: "Software Engineer"
   avatarURL: "https://avatars3.githubusercontent.com/u/1807982?v=3&s=466" 
   location: "San Francisco, CA"
   email: "eric@kodowa.com"
   phone: "555-555-5559"]          
```

### threads

```
search
  corey = [#user name: "Corey Montella"]
  chris = [#user name: "Chris Granger"]
  josh = [#user name: "Josh Cole"]
  rob = [#user name: "Rob Attorri"]
  eric = [#user name: "Eric Hoffman"]

commit
  // Add contacts to users
  corey.contacts := (chris, josh, rob, eric)
  chris.contacts := (corey, josh, rob)
  josh.contacts := (corey, rob, eric)
  rob.contacts := (corey, josh, chris, eric)
  eric.contacts := (josh, rob)

  // Make some threads
  [#thread users: (corey, chris) messages:
    [#message sender: corey, time: 1476821596000, text: "Hey"]
    [#message sender: chris, time: 1476821597000, text: "Hey, how are you."]
    [#message sender: corey, time: 1476821598000, text: "I'm fine, how are you?"]
    [#message sender: chris, time: 1476821599000, text: "Fine as well."]
    [#message sender: chris, time: 1476821600000, text: "Glad we got that out of the way!"]]

  [#thread users: (corey, josh) messages:
    [#message sender: josh, time: 1476735198000, text: "Hey"]
    [#message sender: corey, time: 1476735199000, text: "What's up Josh?"]
    [#message sender: josh, time: 1476735200000, text: "I need to tell you something...."]
    [#message sender: corey, time: 1476735201000, text: "Uh oh..."]
    [#message sender: corey, time: 1476735205000, text: "Well what is it? Don't leave me hanging!"]]

  [#thread users: (corey, rob) messages:
    [#message sender: corey, time: 1476735420000, text: "Did Josh tell you what happened?"]
    [#message sender: rob, time: 1476735421000, text: "Yeah, don't worry, we took care of it. "]
    [#message sender: corey, time: 1476735422000, text: "Well what happened?"]
    [#message sender: rob, time: 1476735423000, text: "Like I said, don't worry about it."]
    [#message sender: corey, time: 1476735424000, text: "..."]
    [#message sender: rob, time: 1476735451000, text: "üî•"]]    
```