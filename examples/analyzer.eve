# Eve Analyzer

## assign variables

For every variable there is a group

...
search
  variable = [#variable]
  number = random[seed: variable]
commit
  [#group number variable]
...

...
search
  variable = [#variable not(group)]
  group = [#group variable]
commit
  variable.group := group
...

Handle a constant equivalence

...
search
  eq = [#equality]
  (a, b) = if eq.a.tag, not(eq.b.tag) then (eq.a, eq.b)
            else if eq.b.tag, not(eq.a.tag) then (eq.b, eq.a)
bind
  a.constant += b
...

Handle variable equivalence

...
search
  [#equality a b]
  a.group != b.group
  min-a = min[value: a.group.number, given: a.group.number, per: a]
  min-b = min[value: b.group.number, given: b.group.number, per: b]
  a-group = [#group number: min-a]
  b-group = [#group number: min-b]
  (new, old) = if min-a < min-b then (a-group, b-group)
                else if min-b < min-a then (b-group, a-group)
  var = [#variable group: old]
commit
  var.group := new
...

## associate record-tags to both actions and scans

~~~
search
  [#findAffector]
  [#scan entity: [register] attribute: "tag" value block]
  scan = [#scan entity: [register] block]
bind
  scan.record-tag += value
~~~

~~~
search
  [#findAffector]
  [#action entity: [register] attribute: "tag" value block]
  action = [#action entity: [register] block]
bind
  action.record-tag += value
~~~

~~~
search
  [#findAffector]
  [#scan entity: [register] record-tag block]
  action = [#action entity: [register] block]
bind
  action.record-tag += record-tag
~~~

~~~
search
  [#findAffector]
  scan = [#scan not(record-tag)]
bind
  scan += #analyzer/any
~~~

## tag equivalence

~~~
  search
    attribute = "tag"
    [#scan block entity: [register] attribute value: tag]
    [#action block entity: [register] attribute value: tag2]
  bind
    [#tag-equivalence tag tag2]
~~~

## unprovided scans

...
  search
    scan = [#scan record-tag attribute]
    not( action = [#action record-tag attribute]
        value = if scan.value = action.value then true
                else if scan.value = [#variable] then true
                else if action.value = [#variable] then true )
  bind
    scan += #unprovided
...

...
  search
    scan = [#scan #analyzer/any attribute]
    not( action = [#action attribute]
        value = if scan.value = action.value then true
                else if scan.value = [#variable] then true
                else if action.value = [#variable] then true )
  bind
    scan += #unprovided
...

...
search
  scan = [#scan #unprovided start stop record-tag attribute block]
bind @editor
  [#comment scan | block start stop message: "{{attribute}} is never added to {{record-tag}} records, so this will always be empty"]
...

# token query

## query links

~~~
search
  query = [#query token]
  [#link a: to b: token]
bind
  [#query-link token to distance: 1]
~~~

~~~
search
  query = [#query token]
  link = [#query-link token distance]
  [#link a: to b: link.to]
bind
  [#query-link token to distance: distance + 1]
~~~

## token -> variable

~~~
search
  query = [#query token]
  [#link a: to b: token]
  to = [#variable register block]
  token.block = block
bind
  query.register += [token variable: to register block]
~~~

We can also associate what attribute that variable is writing to if there is one

~~~
search
  query = [#query register]
  action = [#action attribute value: register.variable]
bind
  register.attribute += attribute
~~~

## token -> scan

~~~
search
  query = [#query token]
  [#query-link token to]
  to = [#scan start stop]
  start <= token.start <= stop
bind
  query.scan += to
~~~

~~~
search
  [#query token scan: [#scan record-tag attribute value]]
  provider = [#action record-tag attribute start stop]
bind @editor
  [#comment provider | start stop kind: "warning" message: "this is providing it" ]
bind @browser
  [#div text: "provided by: {{provider}}"]
~~~

~~~
search
  [#query token scan: [#scan record-tag attribute]]
bind @browser
  [#div text: "{{token}} scans #{{record-tag}} {{attribute}}"]
~~~

## token -> action

~~~
search
  query = [#query token]
  [#query-link token to]
  to = [#action start stop]
  start <= token.start <= stop
bind
  query.action += to
~~~

~~~
search
  [#query token action: [#action record-tag attribute]]
  consumer = [#scan record-tag attribute start stop]
bind @editor
  [#comment consumer | start stop kind: "warning" message: "This is consuming" ]
bind @browser
  [#div text: "consumed by: {{consumer}}"]
~~~

~~~
search
  [#query token action: [#action record-tag attribute]]
bind @browser
  [#div text: "{{token}} actions #{{record-tag}} {{attribute}}"]
~~~

## token -> record

~~~
search
  query = [#query]
  entity = if query.scan then query.scan.entity
           else if query.action then query.action.entity
  record = [#record entity start stop]
bind
  query <- [entity entity-register: entity.register]
~~~


## find variables related to a span

~~~
search
  query = [#findRelated for: "span" span]
  span = if span = [#action] then span
         else if span = [#scan] then span
  variable = if span.entity = [#variable] then span.entity
             if span.value = [#variable] then span.value
  [#link a: variable b: token]
bind
  query.variable += token
~~~

~~~
search
  query = [#findRelated for: "span" span]
  span = [#record entity start stop]
  scan = if action = [#action entity] then action
         if scan = [#scan entity] then scan
  scan.start >= start
  scan.stop <= stop
  scan.value = [#variable]
  [#link a: scan.value b: token]
  [#link a: entity b: entity-token]
bind
  query.variable += entity-token
  query.variable += token
~~~

## find spans related to a variable

~~~
search
  query = [#findRelated for: "variable" variable: token]
  [#link a: variable b: token]
  span = if span.entity = variable then span
         if span.value = variable then span
bind
  query.span += span
~~~

## recordId ->  build-node

~~~
search
  query = [#findSource recordId not(attribute)]
search @evaluation-session @evaluation-browser
  recordId = [tag]
bind
  query.cool += tag
~~~

Find out what nodes contribute to a record

~~~
search
  query = [#findSource recordId not(attribute)]
search @evaluation-session @evaluation-browser
  lookup[record: recordId, attribute, value, node]
bind
  query.node += node
~~~

Find out what nodes contribute to a specific attribute on a record

~~~
search
  query = [#findSource recordId attribute]
search @evaluation-session @evaluation-browser
  lookup[record: recordId, attribute, value, node]
bind
  query.node += node
~~~

We may also want to lookup what node created a complete eav

~~~
search
  query = [#findSource recordId attribute value]
search @evaluation-session @evaluation-browser
  lookup[record: recordId, attribute, value, node]
bind
  query.node += node
~~~

## scan to block

~~~
search
  query = [#findSource span: [block]]
bind
  query.block += block
~~~

## nodeId -> creator (aka findSource)

~~~
search
  query = [#findSource node]
  action = [#action entity build-node: node block]
  span = if query.attribute then action
         else if record = [#record entity] then record
         else action
bind
  query.source += [span block start: span.start, stop: span.stop]
~~~

## build-node to creator

~~~
search
  query = [#query build-node]
  [#action entity build-node]
  record = [#record entity]
commit
  query.record := record
~~~

## findAffector

~~~
search
  query = [#findAffector recordId attribute]
  scan = [#scan entity: [register] record-tag: tag block]
  action = [#action entity: [register] block attribute]
  final = if record = [#record entity: [register] start stop]
             action.start >= start
             action.stop <= stop then record
          else action
search @evaluation-session @evaluation-browser
  tag = recordId.tag
bind
  query.affector := [action: final, block]
~~~

~~~
search
  query = [#findAffector recordId attribute]
  //scan = [#scan entity: [register] record-tag: tag block]
  //action = [#action entity: [register] attribute block ]
search @evaluation-session @evaluation-browser
  recordId = [tag]
bind @browser
  //[#div text: "yo {{tag}}"]
~~~


