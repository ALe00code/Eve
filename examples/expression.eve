ew# parse expression examples
## operators and lexical classes
```
bind
  [name: "*" precedence:3 #operator]
  [name: "-" precedence:2 #operator]
  [name: "/" precedence:3 #operator]
  [name: "+" precedence:2 #operator]
  [name: "=" precedence:4 #operator]
  [name: "0" #digit]
  [name: "1" #digit]
  [name: "2" #digit]
  [name: "3" #digit]
  [name: "4" #digit]
  [name: "5" #digit]
  [name: "6" #digit]
  [name: "7" #digit]
  [name: "8" #digit]
  [name: "9" #digit]
```


##number
TODO - substring isn't appropriately conservative
```
       search n = [#number text]
              name = substring[text to:2]
              [#digit name]
       bind  n <- [tail:substring[text from:2] val:string-to-number[text:name]]
       commit @browser
             [#div text:"number {{string-to-number[text:name]}}"]
```

## expressions

### collapse stack
- how do I pull the root out of this guy now? looks like i have to generate a height (but how)
- ok, i could also use integer indices with a cross, but
  the immutable doubly linked list is likely(?) ok?

```
      search e = [#center-node next prev]
             right = if next.next.precedence > e.precedence then next.next else next
             left = if prev.prev.precedence > e.precedence then prev.prev else prev
      bind
             e.right := right
             e.left := left
```

### center expression success

```
      search c = [#center-expression text parent]
             operator = [#operator name]
             olength = string-length[text:name] + 1
             name = substring[text to:olength]
             tail = substring[text from:olength]
      commit @browser [#div text:"center {{name}}"]
      bind  [#left-expression parent text:tail prev:c]
```

### debuggo
```
search record = []
       lookup[record attribute value]
commit @browser [#div text:"la {{record}} {{attribute}} {{value}}"]
```


### left expression success
```
         search e = [#left-expression val tail parent]
         bind e.next := [#center-expression parent text:tail prev:e]
         commit @browser [#div text:"left {{val}}"]
```

### left expression start
```
         search e = [#left-expression text parent]
         bind e.tag += "number"
```


###start
```
          search parent = [#expression text]
          bind [#left-expression text parent prev:[precedence:0]]
          commit @browser  [#div text:"start left"]
```


## test case
```
          bind [#expression text: "4+5*7"]
          commit @browser  [#div text:"start"]
```
