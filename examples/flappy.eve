
# Flappy bird in Eve

Add a flappy eve and a world for it to flap in
```
  commit
    [#player #self name: "eve" x: 25 y: 50 velocity: 0]
    [#world screen: "menu" frame: 0 distance: 0 best: 0 gravity: -0.061]
    [#obstacle gap: 35 offset: 0]
    [#obstacle gap: 35 offset: -1]
```

Draw the game world!
```
  commit @browser
    [#div style: [user-select: "none" -webkit-user-select: "none" -moz-user-select: "none"]  children:
      [#svg #game-window viewBox: "10 0 80 100", width: 480 children:
        [#rect x: 0 y: 0 width: 100 height: 53 fill: "rgb(112, 197, 206)" sort: 0]
        [#image x: 0 y: 52 width: 100 height: 43 preserveAspectRatio: "xMinYMin slice" href: "https://cdn.rawgit.com/bhauman/flappy-bird-demo/master/resources/public/imgs/background.png" sort: 1]
        [#rect x: 0 y: 95 width: 100 height: 5 fill: "rgb(222, 216, 149)" sort: 0]]]
```


## Screens
This handles the game's miscellaneous screens. It's currently pretty simple, but you could expand it to include changes to other purpose-specific screens.

Draw the main menu
```
  search (@session, @browser)
    [#world screen: "menu"]
    svg = [#game-window]
  bind @browser
    svg.children += [#text x: 50 y: 45 text-anchor: "middle" font-size: 6 text: "Click the screen to begin!" sort: 10]
```

Keep score
```
  search
    world = [#world distance]
  bind
    world.score := floor[value: distance]
```

Draw the game over final score
```
  search (@session, @browser)
    [#world screen: "game over" score best]
    svg = [#game-window]
  bind @browser
    svg.children += [#text x: 50 y: 30 text-anchor: "middle" font-size: 6 text: "Game Over :(" sort: 10]
    svg.children += [#text x: 50 y: 55 text-anchor: "middle" font-size: 6 text: "Score {{score}}" sort: 10]
    svg.children += [#text x: 50 y: 65 text-anchor: "middle" font-size: 6 text: "Best {{best}}" sort: 10]
    svg.children += [#text x: 50 y: 85 text-anchor: "middle" font-size: 4 text: "Click to play again!" sort: 10]
```

Start the game
```
  search @session @event
    [#click #direct-target]
    // world = [#world screen: "menu"]
    world = if w = [#world screen: "menu"] then w
            else [#world screen: "game over"]
    neue = if world = [#world score best] score > best then score
          else if world = [#world best] then best
    player = [#player]
  commit
    world <- [screen: "game" distance: 0 best: neue]
    player <- [x: 25 y: 50 velocity: 0]
```


## Run the actual game
Every 2 distance a wild obstacle appears
```
  search
    [#world distance]
    obstacle = [#obstacle offset]
    obstacle-distance = distance + offset
    obstacle-distance >= 0
  bind
    obstacle <- [x: 100 - (50 * mod[value: obstacle-distance, by: 2])]
```

Readjust the height of the gap every time the obstacle resets
```
  search
    [#world screen: "game" frame]
    obstacle = [#obstacle x > 90]
    height = random[seed: "{{obstacle}}{{frame}}"] * 30 + 5
  commit
    obstacle.height := height
```

Draw the player
```
  search (@session, @browser)
    svg = [#game-window]
    player = [#player x y]
    imgs = "https://cdn.rawgit.com/bhauman/flappy-bird-demo/master/resources/public/imgs"
  bind @browser
    sprite = [#image player width: 10 height: 10 href: "http://i.imgur.com/sp68LtM.gif" sort: 8]
    sprite.x := x - 5
    sprite.y := y - 5
    svg.children += sprite
```

Draw the obstacles
```
  search (@session, @browser)
    svg = [#game-window]
    obstacle = [#obstacle x height gap]
    bottom-height = height + gap
    imgs = "https://cdn.rawgit.com/bhauman/flappy-bird-demo/master/resources/public/imgs"

  bind @browser
    sprite-group = [#svg #obs-spr obstacle sort: 2 overflow: "visible" children:
      [#image y: 0 width: 10 height, preserveAspectRatio: "none" href: "{{imgs}}/pillar-bkg.png" sort: 1]
      [#image x: -1 y: height - 5 width: 12 height: 5 href: "{{imgs}}/lower-pillar-head.png" sort: 2]
      [#image y: bottom-height width: 10 height: 90 - bottom-height, preserveAspectRatio: "none" href: "{{imgs}}/pillar-bkg.png" sort: 1]
      [#image x: -1 y: bottom-height width: 12 height: 5 href: "{{imgs}}/lower-pillar-head.png" sort: 2]]
    [#div text: "spg {{sprite-group}} {{x}}"]
    sprite-group.x := x
    svg.children += sprite-group
```

Flap the player
```
  search @event @session
    [#click #direct-target]
    [#world screen: "game"]
    player = [#player #self]
  commit
    player.velocity := 1.17 // In rare cases this can create a duplicate velocity. If this happens, things will get bad fast.
```

As time moves gently forward, winter turns to spring
```
  search @session @event
    [#time frames]
    world = [#world screen: "game" frame != frames gravity]
    player = [#player y velocity]
    not([#click])
  commit
    world.frame := frames
    world.distance := world.distance + 1 / 60
    player <- [y: y - velocity, velocity: velocity + gravity]
```

Lose the game if the player hits the ground
```
  search
    world = [#world screen: "game"]
    [#player y > 85] // ground height + player radius
  commit
    world.screen := "game over"
```

Lose the game if the player hits an obstacle
```
  search
    world = [#world screen: "game"]
    [#player x y]
    [#obstacle x: obstacle-x height gap]
    ∂x = abs[value: obstacle-x + 5 - x] - 10 // distance between the edges of player and obstacle (offset of 1/2 obstacle width because origin is on the left)
    ∂x < 0
    collision = if y - 5 <= height then true
                else if y + 5 >= gap + height then true
  commit
    world.screen := "game over"
```
